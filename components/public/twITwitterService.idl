/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is TwitterXUL.
 *
 * The Initial Developer of the Original Code is
 * Dave Townsend <dtownsend@oxymoronical.com>
 * Portions created by the Initial Developer are Copyright (C) 2009
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

interface mozIStorageConnection;
interface twIMessage;

/**
 * Any registered update listener will be called during the background refresh
 * process to hear about the start and end of the update as well as any new
 * status messages discovered.
 */
[scriptable, uuid(8ec2f337-2bf8-4ad2-8a87-b82b8ca7f5c5)]
interface twITwitterUpdateListener : nsISupports
{
  /**
   * Called when the refresh process begins.
   */
  void onUpdateStarted();

  /**
   * Called at the end of the refresh process if any new items were discovered.
   * Will be called before onUpdateEnded and may not be called at all.
   * @param items
   *        an array of new status messages retrieved.
   * @param itemCount
   *        the number of new status messages retrieved.
   */
  void onNewItemsAdded([array, size_is(itemCount)] in twIMessage items, in unsigned long itemCount);

  /**
   * Called when the refresh process ends.
   * @param status
   *        an indication of any errors during the updates. If this is non-zero
   *        then at least one of the operations failed.
   */
  void onUpdateEnded(in unsigned long status);
};

/**
 * The background service automatically checks for new status messages from
 * Twitter at a rate specified by preferences. Listeners can be registered to
 * hear about the refreshes and the database of status messages can be accessed
 * through this interface.
 */
[scriptable, uuid(c7720cbf-bddf-4a9b-8269-6875f1da972a)]
interface twITwitterService : nsISupports
{
  /**
   * Indicates whether a background refresh is currently in progress
   */
  readonly attribute boolean busy;

  /**
   * The current Twitter username
   */
  readonly attribute AString username;
  /**
   * The current Twitter password
   * TODO remove this from the interface
   */
  readonly attribute AString password;

  /**
   * The database of status updates.
   */
  readonly attribute mozIStorageConnection database;

  /**
   * Registers a new update listener to hear about background refresh events.
   * This is a no-op if the listener is already registered.
   * @param listener
   *        The new listener to register.
   */
  void addUpdateListener(in twITwitterUpdateListener listener);

  /**
   * Unregisters an update listener. This is a no-op if the listener is not
   * already registered.
   * @param listener
   *        The listener to unregister.
   */
  void removeUpdateListener(in twITwitterUpdateListener listener);

  /**
   * Requests an immediate refresh of the status messages. This is a no-op if
   * there is already a refresh in progress or if the username has not yet
   * been set.
   */
  void refresh();
};
